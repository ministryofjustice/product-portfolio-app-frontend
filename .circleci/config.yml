version: 2.1

workflows:
  build-test-deploy:
    jobs:
      - build:
          context: hmpps-product-portfolio-prod

jobs:
  build:
    docker:
    - image: ${ECR_ENDPOINT}/cloud-platform/tools:circleci-internal
      environment:
        IMAGE_URI: ${ECR_ENDPOINT}/hmpps-product-portfolio/hmpps-product-portfolio:latest
    steps:
    - checkout
    - setup_remote_docker
    - run:
        name: Build application Docker image and push to ECR
        command: |
          $(aws ecr get-login --no-include-email)
          docker build --build-arg ACCESSTOKEN=${ACCESSTOKEN} --build-arg SPACEID=${SPACEID} -t ${ECR_ENDPOINT}/hmpps-product-portfolio/hmpps-product-portfolio .
          docker push ${ECR_ENDPOINT}/hmpps-product-portfolio/hmpps-product-portfolio:latest
    - run:
        name: Authenticate with cluster
        command: |
          echo -n ${K8S_CLUSTER_CERT_LIVE} | base64 -d > ./ca.crt
          kubectl config set-cluster ${K8S_CLUSTER_NAME_LIVE} --certificate-authority=./ca.crt --server=https://${K8S_CLUSTER_NAME_LIVE}
          kubectl config set-credentials circleci --token=${K8S_TOKEN_LIVE}
          kubectl config set-context ${K8S_CLUSTER_NAME_LIVE} --cluster=${K8S_CLUSTER_NAME_LIVE} --user=circleci --namespace=${K8S_NAMESPACE}
          kubectl config use-context ${K8S_CLUSTER_NAME_LIVE}
    - run:
        name: Install new app
        command: |
          if [ "${CIRCLE_BRANCH}" == "main" ]; then
            # kubectl apply --filename kubectl_deploy --namespace=${K8S_NAMESPACE}
            kubectl apply --record=false -f kubectl_deploy --namespace=${K8S_NAMESPACE}
          fi
          kubectl --namespace=${K8S_NAMESPACE} get pods
